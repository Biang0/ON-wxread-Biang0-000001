name: WeRead Stable Bot

on:
  schedule:
    - cron: '0 21 * * 1-6'    # 北京5:00（周一至周六）
    - cron: '50 3 * * 1-6'    # 北京11:50
    - cron: '0 14 * * 1-6'    # 北京22:00
    - cron: '0 16-23 * * 6'   # 北京周日00:00-07:59
    - cron: '0 0-15 * * 0'    # 北京周日08:00-23:59

  workflow_dispatch:
    inputs:
      duration:
        description: '运行时长（分钟）30-240'
        required: false
        type: number

jobs:
  core_task:
    runs-on: ubuntu-24.04
    env:
      TZ: Asia/Shanghai
      WXPUSHER_SPT: ${{ secrets.WXPUSHER_SPT }}
      PUSH_METHOD: ${{ secrets.PUSH_METHOD }}

    steps:
    # ========================
    # 阶段1：参数配置
    # ========================
    - name: ⚙️ 参数初始化
      id: config
      run: |
        # 手动模式处理
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          if [[ -n "${{ inputs.duration }}" ]]; then
            READ_NUM=${{ inputs.duration }}
            echo "🛠️ 手动模式 | 时长: $READ_NUM 分钟"
          else
            echo "::error::手动触发需指定duration参数" && exit 1
          fi
        else
          # 自动模式逻辑
          day=$(date +%u)
          if [[ $day == 7 ]]; then  # 周日
            READ_NUM=$(( 90 + RANDOM % 151 ))  # 90-240分钟
          else
            READ_NUM=$(( 45 + RANDOM % 76 ))   # 45-120分钟
          fi
        fi

        # 参数校验
        if (( READ_NUM < 30 || READ_NUM > 240 )); then
          echo "::error::时长超出范围(30-240): $READ_NUM" && exit 1
        fi

        echo "READ_NUM=$READ_NUM" >> $GITHUB_OUTPUT

    # ========================
    # 阶段2：核心任务
    # ========================
    - name: 🤖 执行阅读任务
      env:
        READ_NUM: ${{ steps.config.outputs.READ_NUM }}
      run: |
        echo "✅ 开始执行阅读 | 计划时长: ${READ_NUM}分钟"
        # 实际任务示例（替换为你的真实逻辑）
        for ((i=1; i<=READ_NUM; i++)); do
          echo "[${i}/${READ_NUM}] 正在阅读..."
          sleep 60  # 模拟每分钟进度
        done

    # ========================
    # 阶段3：通知系统
    # ========================
    - name: 📢 微信推送报告
      if: always()
      env:
        TOPIC_ID: ${{ secrets.WXPUSHER_TOPIC_ID }}
        UID_LIST: ${{ secrets.WXPUSHER_UIDS }}
      run: |
        # 构建消息内容
        status="${{ job.status }}"
        run_url="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        msg="微信读书任务报告：
        ➤ 状态: ${status^^}
        ➤ 执行时长: ${{ env.READ_NUM }}分钟
        ➤ 日志详情: $run_url"

        # 发送请求
        case "$PUSH_METHOD" in
          topic)
            curl -sS -X POST "https://wxpusher.zjiecode.com/api/send/message" &#92;
              -H "Content-Type: application/json" &#92;
              -d '{
                "appToken": "'"$WXPUSHER_SPT"'",
                "content": "'"$msg"'",
                "contentType": 3,
                "topicIds": ['"$TOPIC_ID"']
              }' ;;
          uid)
            IFS=',' read -ra UIDS <<< "$UID_LIST"
            for uid in "${UIDS[@]}"; do
              curl -sS -X POST "https://wxpusher.zjiecode.com/api/send/message" &#92;
                -d "appToken=$WXPUSHER_SPT&content=$msg&contentType=3&uids=$uid"
              sleep 0.5
            done ;;
          *)
            echo "::error::未知推送方式: $PUSH_METHOD" && exit 1 ;;
        esac

        echo "通知发送状态码: $?"
