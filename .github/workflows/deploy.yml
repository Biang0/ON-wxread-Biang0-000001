name: wxread

on:
  schedule:
    # UTC时间与北京时间对应关系：
    # 早间任务：UTC 21:00 → 北京 05:00（次日）
    - cron: '0 21 * * *'    # 北京 05:00
    
    # 午间任务：UTC 03:40 → 北京 11:40
    - cron: '40 3 * * *'    # 北京 11:40
    
    # 晚间任务：UTC 14:00 → 北京 22:00
    - cron: '0 14 * * *'    # 北京 22:00
    
    # 周日全天任务：UTC 16-23（周六） + 0-15（周日） → 北京 00:00-23:59（周日）
    - cron: '0 16-23,0-15 * * 6'  # 北京周日全天覆盖

  workflow_dispatch:
    inputs:
      duration:
        description: '手动时长（分钟）45-90'
        required: false
        type: number

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      TZ: Asia/Shanghai  # 容器内显示北京时间

    steps:
    - name: ⏰ 时间策略引擎
      id: time_engine
      run: |
        # 获取当前UTC星期几（0=周日）
        DAY=$(date -u +%w)
        HOUR=$(date -u +%H)
        
        # 周日任务逻辑（北京时间周日全天）
        if [[ "${{ github.event.schedule }}" == '0 16-23,0-15 * * 6' ]]; then
          # 每天随机执行一次
          if (( RANDOM % 1440 < 60 )); then  # 每小时有1/24概率执行
            READ_NUM=$(( 90 + RANDOM % 91 ))  # 45-90分钟
            echo "🎲 周日随机任务触发"
          else
            echo "⏭️ 周日未命中随机时段"
            exit 0
          fi
        else
          # 原有周一到周六逻辑保持...
        fi

        # 添加延迟参数
        echo "DELAY_MINUTES=$(( RANDOM % 21 ))" >> $GITHUB_ENV
        echo "READ_NUM=$READ_NUM" >> $GITHUB_OUTPUT

    - name: ⏳ 周日随机延迟
      if: ${{ contains(github.event.schedule, '0 16-23,0-15 * * 6') }}
      run: |
        echo "⏱️ 周日任务随机延迟 ${{ env.DELAY_MINUTES }} 分钟"
        sleep $(( ${{ env.DELAY_MINUTES }} * 60 ))

    - name: 🚀 执行核心任务
      env:
        READ_NUM: ${{ steps.time_engine.outputs.READ_NUM }}
      run: |
        echo "✅ 最终参数 | READ_NUM: $READ_NUM | 总耗时: $((READ_NUM/2))分钟"
        # python main.py --read_num $READ_NUM
