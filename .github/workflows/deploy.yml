name: wxread

on:
  schedule:
    - cron: '0 14 * * *'          # 晚间任务：每天22:00触发
    - cron: '0 21 * * 1-5'        # 早间任务：周一到周五05:00触发
    - cron: '40 3 * * 1-5'        # 午间任务：周一到周五11:40触发
    - cron: '0 9 * * sat,sun'     # 周末任务：周六和周日17:00触发
    - cron: '0 0 * * sat,sun'     # 周随机任务：周末08:00触发

  workflow_dispatch:
    description: 手动触发微信阅读任务
    inputs:
      mode:
        type: choice
        description: 选择运行模式（自动/手动）
        required: true
        default: '手动'
        options:
          - 自动
          - 手动
      custom_time:
        type: string
        description: '自定义阅读时间（分钟，仅手动触发有效）'
        required: false
      custom_delay:
        type: string
        description: '自定义延迟时间（分钟，仅手动触发有效）'
        required: false

jobs:
  deploy:
    runs-on: ubuntu-22.04
    environment: AutoRead

    steps:
    - name: 🔧 设置 DNS
      run: |
        echo "nameserver 8.8.8.8" | sudo tee /etc/resolv.conf
        echo "nameserver 8.8.4.4" | sudo tee -a /etc/resolv.conf
        echo "✅ DNS 配置完成"

    - name: 📥 检出仓库
      uses: actions/checkout@v4

    - name: 🐍 设置 Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: 📦 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install --no-cache-dir -r requirements.txt
        pip list  # 显示安装的依赖

    - name: ⏱️ 计算延迟
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" && -n "${{ github.event.inputs.custom_delay }}" ]]; then
          DELAY=${{ github.event.inputs.custom_delay }}
        else
          DELAY=$((RANDOM % 21))  # 0 - 20 分钟随机延迟
        fi
        echo "⏳ 延迟 ${DELAY} 分钟..."
        sleep $((DELAY * 60))
        echo "✅ 延迟执行完成"

    - name: 🎲 处理周随机任务
      if: github.event_name == 'schedule' && github.event.schedule == '0 0 * * sat,sun'
      run: |
        CHECK=$((RANDOM % 7))
        echo "🎲 随机数：$CHECK (需要等于0)"
        if [ $CHECK -ne 0 ]; then
          echo "⏭️ 跳过周随机任务"
          exit 0
        fi
        echo "🎉 触发周随机任务"

    - name: 🔢 计算 READ_NUM
      run: |
        case "${{ github.event.schedule }}" in
          '0 21 * * 1-5') READ_NUM=$((RANDOM % 31 + 130));;  # 早间任务：130-160
          '40 3 * * 1-5') READ_NUM=$((RANDOM % 31 + 160));;  # 午间任务：160-190
          '0 14 * * *') READ_NUM=$((RANDOM % 31 + 190));;   # 晚间任务：190-220
          '0 9 * * sat,sun') READ_NUM=$((RANDOM % 31 + 190));;  # 周末任务：190-220
          '0 0 * * sat,sun') READ_NUM=$((RANDOM % 61 + 120));;  # 周随机任务：120-180
          *) READ_NUM=$((RANDOM % 31 + 190));;  # 默认值
        esac

        if [[ "${{ github.event_name }}" == "workflow_dispatch" && -n "${{ github.event.inputs.custom_time }}" ]]; then
          READ_NUM=$(( ${{ github.event.inputs.custom_time }} * 2 ))
        fi

        echo "READ_NUM=$READ_NUM" >> $GITHUB_ENV
        echo "✅ 计算完成 READ_NUM=$READ_NUM"

    - name: 🚀 执行主程序
      env:
        WXREAD_CURL_BASH: ${{ secrets.WXREAD_CURL_BASH }}
      run: |
        echo "执行参数 READ_NUM=${{ env.READ_NUM }}"
        python main.py