name: wxread-final

on:
  schedule:
    # 北京时间 -> UTC时间转换
    - cron: '0 21 * * *'    # 北京5:00 (UTC 21:00)
      timezone: Asia/Shanghai
    - cron: '45 3 * * *'    # 北京11:45 (UTC 03:45)
      timezone: Asia/Shanghai 
    - cron: '0 14 * * *'    # 北京22:00 (UTC 14:00)
      timezone: Asia/Shanghai
    - cron: '0 21 * * 0'    # 周日北京5:00 (UTC 周六21:00)
      timezone: Asia/Shanghai
  workflow_dispatch:
    inputs:
      mode:
        description: '运行模式 (auto/manual)'
        required: false
        default: 'auto'

jobs:
  deploy:
    runs-on: ubuntu-22.04
    environment: AutoRead

    steps:
    # ... [保留网络、Python环境等基础配置]

    - name: ⏱️ 启动延迟
      run: |
        # 初始随机延迟（0-20分钟）
        DELAY=$(python -c "import random; print(random.randint(0, 20))")
        echo "🕒 初始延迟: ${DELAY}分钟"
        sleep $((DELAY * 60))

    - name: 🔢 生成阅读参数
      run: |
        # 时间范围 3.4-4.1小时 = 204-246分钟
        # 基础操作次数 = 总分钟数 * 60 / (操作间隔 + 停顿时间)
        
        # 生成基础参数
        TOTAL_MIN=$(python -c "import random; print(random.randint(204, 246))")
        
        # 生成随机停顿参数（30-120秒）
        PAUSE_MIN=30
        PAUSE_MAX=120
        PAUSE_RANGE=$(python -c "print($PAUSE_MAX - $PAUSE_MIN)")
        
        # 计算等效操作次数
        BASE_OPS=$(( TOTAL_MIN * 60 / (60 + PAUSE_MIN) ))  # 最小操作次数
        MAX_OPS=$(( TOTAL_MIN * 60 / (60 + PAUSE_MAX) ))  # 最大操作次数
        FINAL_OPS=$(python -c "import random; print(random.randint($MAX_OPS, $BASE_OPS))")
        
        # 输出参数
        echo "✅ 总时长: ${TOTAL_MIN}分钟"
        echo "🔄 操作次数: $FINAL_OPS (间隔 ${PAUSE_MIN}-${PAUSE_MAX}秒)"
        echo "READ_OPS=$FINAL_OPS" >> $GITHUB_ENV
        echo "PAUSE_RANGE=$PAUSE_RANGE" >> $GITHUB_ENV
        echo "PAUSE_BASE=$PAUSE_MIN" >> $GITHUB_ENV

    - name: 🎲 周日随机检查
      if: |
        github.event_name == 'schedule' &&
        contains(github.event.schedule, '0 21 * * 0')  # 正确写法
      run: |
        CHECK=$(python -c "import random; print(random.randint(0, 6))")
        echo "周日随机数：$CHECK (需要等于0)"
        if [ $CHECK -ne 0 ]; then
          echo "⏭️ 跳过周日任务"
          exit 0
        fi


    - name: 📖 执行阅读任务
      env:
        WXREAD_TOKEN: ${{ secrets.WXREAD_CU }}
      run: |
        set -euo pipefail
        
        for ((i=1; i<=$READ_OPS; i++))
        do
          # 生成随机停顿时间
          PAUSE=$(python -c "import random; print(random.randint($PAUSE_BASE, $PAUSE_BASE+$PAUSE_RANGE))")
          
          echo "🔍 第${i}次操作 | 停留${PAUSE}秒"
          
          # 执行核心逻辑（示例）
          curl -sS -H "Authorization: Bearer $WXREAD_TOKEN" &#92;
            "https://api.example.com/read?action=next"
          
          # 随机停顿
          sleep $PAUSE
        done
        
        echo "✅ 阅读任务完成 | 总操作: $READ_OPS 次"

    # ... [保留日志报告等优化步骤]
