name: WeRead Automation

on:
  schedule:
    # ==============================================
    # 日常任务（周一到周六 北京时间）
    # ==============================================
    - cron: '0 21 * * 1-6'    # UTC 21:00 → 北京5:00（次日）
    - cron: '40 3 * * 1-6'    # UTC 3:40 → 北京11:40
    - cron: '0 14 * * 1-6'    # UTC 14:00 → 北京22:00

    # ==============================================
    # 周日任务入口（UTC周六16点 → 北京周日0点）
    # ==============================================
    - cron: '0 16 * * 6'

  workflow_dispatch:
    inputs:
      mode:
        description: '运行模式 [auto:智能模式 / manual:手动调试]'
        required: false
        default: 'auto'

jobs:
  daily_task:
    name: 日常阅读任务（周一到六）
    runs-on: ubuntu-22.04
    environment: AutoRead

    steps:
    # ------------------------------
    # 初始化环境
    # ------------------------------
    - name: 🔧 环境准备
      uses: actions/checkout@v4

    # ------------------------------
    # 时段识别模块
    # ------------------------------
    - name: 🕒 识别触发时段
      id: time_period
      run: |
        case "${{ github.event.schedule }}" in
          *'0 21 * * '*)
            echo "PERIOD=morning" >> $GITHUB_ENV
            echo "🕖 时段：早间（北京5:00）" ;;
          *'40 3 * * '*)
            echo "PERIOD=noon" >> $GITHUB_ENV
            echo "🕦 时段：午间（北京11:40）" ;;
          *'0 14 * * '*)
            echo "PERIOD=night" >> $GITHUB_ENV
            echo "🕙 时段：晚间（北京22:00）" ;;
        esac

    # ------------------------------
    # 阅读参数生成器
    # ------------------------------
    - name: 🎯 生成阅读参数
      run: |
        # 每日总配额：3.8小时 → 456次数（228分钟×2次/分钟）
        DAILY_QUOTA=456
        
        case $PERIOD in
          morning)
            # 早间：45-75分钟（90-150次）
            NUM=$((90 + RANDOM % 61)) ;;
          noon)
            # 午间：60-90分钟（120-180次）
            NUM=$((120 + RANDOM % 61)) ;;
          night)
            # 晚间：动态补充剩余额度
            REMAINING=$((DAILY_QUOTA - (90 + 120)))
            NUM=$(( REMAINING > 0 ? REMAINING : 120 )) ;;
        esac

        echo "📈 生成参数：$NUM 次（等效 $((NUM/2)) 分钟）"
        echo "READ_NUM=$NUM" >> $GITHUB_ENV

    # ------------------------------
    # 任务执行模块
    # ------------------------------
    - name: 🚀 执行阅读行为
      env:
        API_ENDPOINT: ${{ secrets.READ_API }}
      run: |
        # 添加请求伪装头
        curl -sS -H "User-Agent: Mozilla/5.0" "${API_ENDPOINT}?num=$READ_NUM"

  sunday_task:
    name: 周日全随机任务
    runs-on: ubuntu-22.04
    environment: AutoRead
    needs: []  # 独立执行

    steps:
    # ------------------------------
    # 时区严格校验
    # ------------------------------
    - name: 🌐 验证北京时间
      id: tz_verify
      run: |
        BEIJING_DAY=$(TZ='Asia/Shanghai' date +%u)
        if [ "$BEIJING_DAY" -ne 7 ]; then
          echo "❌ 校验失败：当前非北京时间周日"
          exit 1
        fi
        echo "✅ 时间校验通过：北京时间周日"

    # ------------------------------
    # 全时段随机延迟
    # ------------------------------
    - name: ⏳ 生成隐蔽延迟
      if: success()
      run: |
        # 使用系统熵源生成加密级随机数
        DELAY=$(od -An -N2 -tu2 /dev/urandom | awk '{print $1 % 1440}')
        
        # 转换为易读格式
        HOURS=$(( DELAY / 60 ))
        MINS=$(( DELAY % 60 ))
        
        echo "⏱️ 延迟设置：${DELAY}分钟（${HOURS}小时${MINS}分）"
        sleep $(( DELAY * 60 ))

    # ------------------------------
    # 周日参数生成
    # ------------------------------
    - name: 🎲 生成周日参数
      run: |
        # 周日特殊范围：60-120分钟
        NUM=$((120 + RANDOM % 121))
        echo "🔔 周日阅读量：$NUM 次（等效 $((NUM/2)) 分钟）"
        echo "READ_NUM=$NUM" >> $GITHUB_ENV

    # ------------------------------
    # 隐蔽执行模块
    # ------------------------------
    - name: 🚀 执行周日任务
      env:
        API_ENDPOINT: ${{ secrets.READ_API }}
      run: |
        # 获取实际执行时间
        EXEC_TIME=$(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S')
        echo "🕒 实际执行时间：$EXEC_TIME"
        
        # 带超时重试的请求
        curl -sS -m 600 --retry 2 "${API_ENDPOINT}?num=$READ_NUM"
